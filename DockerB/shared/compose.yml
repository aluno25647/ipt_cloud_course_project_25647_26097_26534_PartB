version: '3.8'

services:
  web:
    image: aluno25647/ipt-cloud-web:V1.13
    deploy:
      replicas: 3
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
    ports:
      - "80:80"
    depends_on:
      - db
      - redis
    networks:
      - app-network

  ws:
    image: aluno25647/ipt-cloud-ws:V1.13
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
    ports:
      - "8000:8000"
    networks:
      - app-network

  db:
    image: postgres:14
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../provision/dump.sql:/docker-entrypoint-initdb.d/dump.sql
    ports:
      - "5432:5432"
    networks:
      - app-network

  redis:
    image: redis:6.2
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

  portainer:
    image: portainer/portainer-ce:latest
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    ports:
      - "9000:9000"
    deploy:
      placement:
        constraints:
          - node.role == manager
      mode: replicated
      replicas: 1
    networks:
      - app-network
      - agent_network

  agent:
    image: portainer/agent
    environment:
      AGENT_CLUSTER_ADDR: tasks.agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - agent_network
    deploy:
      mode: global

volumes:
  postgres_data:
  portainer_data:
  redis_data:

networks:
  app-network:
    driver: overlay
  agent_network:
    driver: overlay
